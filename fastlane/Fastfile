default_platform(:ios)

platform :ios do
  before_all do
    keychain_password = '12345678'

    create_keychain(
      name: "ios-build.keychain",
      password: keychain_password,
      default_keychain: true,
      unlock: true,
      timeout: 3600
    )

    if ENV["BUILD_PODS"] == 'true'
      cocoapods(
        podfile: ENV["PODS_PATH"],
        use_bundle_exec: false
      )
    end
  end

  desc "Build"
  lane :build do
    api_key = app_store_connect_api_key(
      key_id: ENV['APPLE_KEY_ID'],
      issuer_id: ENV['APPLE_KEY_ISSUER_ID'],
      key_content: ENV['APPLE_KEY_CONTENT'],
      in_house: false # optional but may be required if using match/sigh
    )

    use_workspace = !ENV['WORKSPACE_PATH'].empty?
    match(type: ENV['MATCH_BUILD_TYPE'],type: 'appstore', api_key: api_key)

    increment_build_number(
      xcodeproj: ENV['PROJECT_PATH'],
      build_number: (latest_testflight_build_number(
        app_identifier: ENV["IOS_APP_ID"],
        api_key: api_key,
        team_name: ENV["TEAM_NAME"],
      ) + 1).to_s,
    )

    build_app(
      workspace: use_workspace ? ENV['WORKSPACE_PATH'] : nil,
      project: !use_workspace ? ENV['PROJECT_PATH'] : nil,
      scheme: "App",
      output_directory: File.dirname(ENV['OUTPUT_PATH']),
      output_name: File.basename(ENV['OUTPUT_PATH']),
      clean: true,
      export_method: ENV['EXPORT_METHOD'],
      export_team_id: ENV['TEAM_ID'],
      silent: true,
      include_bitcode: false
    )

    if ENV["TESTFLIGHT_UPLOAD"] == 'true'
      upload_to_testflight(
        ipa: File.join(File.dirname(ENV['OUTPUT_PATH']), File.basename(ENV['OUTPUT_PATH'])),
        api_key: api_key,
        app_identifier: ENV['IOS_APP_ID'],
        team_name: ENV['TEAM_NAME'],
        skip_waiting_for_build_processing: true,
        skip_submission: true,
      )
    end
  end

  after_all do
    delete_keychain(
      name: "ios-build.keychain"
    )
  end
end
